basePath: /
definitions:
  handler.CartProductsResponse:
    properties:
      products:
        items:
          $ref: '#/definitions/models.CartProductFullInfo'
        type: array
      sum:
        type: number
    type: object
  handler.ChangePasswordInput:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    required:
    - newPassword
    - oldPassword
    type: object
  handler.Error:
    properties:
      message:
        type: string
    type: object
  handler.ItemProcessedResponse:
    properties:
      id:
        type: integer
      message:
        type: string
    type: object
  handler.OrderResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  handler.ProcessedOrderStatus:
    properties:
      orderId:
        type: string
      toStatus:
        type: string
    required:
    - orderId
    - toStatus
    type: object
  handler.ProductIdInput:
    properties:
      id:
        type: integer
    type: object
  handler.SignInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handler.SignInResponse:
    properties:
      accessToken:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NjA5MDI0NzAsImlhdCI6MTY2MDg5NTI3MCwidXNlcl9pZCI6MSwidXNlcl9yb2xlX2lkIjozfQ.OTiwDdjjCkYkN7LfyOL6VWF7maKvuIpXWH2XWKFzZEo
        type: string
      sessionId:
        example: 15
        type: integer
      userId:
        example: 5
        type: integer
      userRoleId:
        example: 1
        type: integer
    type: object
  handler.allCategoriesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Category'
        type: array
    type: object
  models.CartProduct:
    properties:
      price_for_quantity:
        type: number
      product_id:
        type: integer
      quantity:
        type: integer
    required:
    - price_for_quantity
    - product_id
    - quantity
    type: object
  models.CartProductFullInfo:
    properties:
      amount_in_stock:
        example: 120
        type: number
      article:
        example: "000123"
        type: string
      created_at:
        type: string
      img_url:
        example: https://google-images.com/some-img123
        type: string
      packages_in_box:
        example: 50
        type: integer
      price:
        example: 3.75
        type: number
      price_for_quantity:
        type: number
      product_id:
        type: integer
      product_title:
        example: Стакан одноразовий Крафт 110мл
        type: string
      quantity:
        type: integer
      units_in_package:
        example: 30
        type: integer
    required:
    - price_for_quantity
    - product_id
    - quantity
    type: object
  models.Category:
    properties:
      category_description:
        type: string
      category_title:
        type: string
      id:
        type: integer
      img_url:
        type: string
    required:
    - category_title
    type: object
  models.CategoryFiltration:
    properties:
      categoryId:
        type: integer
      filtrationDescription:
        type: string
      filtrationListId:
        type: integer
      filtrationTitle:
        type: string
      id:
        type: integer
      imgUrl:
        type: string
      infoDescription:
        type: string
    required:
    - filtrationTitle
    - infoDescription
    type: object
  models.DeliveryPaymentTypes:
    properties:
      deliveryTypes:
        items:
          $ref: '#/definitions/models.DeliveryType'
        type: array
      paymentTypes:
        items:
          $ref: '#/definitions/models.PaymentType'
        type: array
    type: object
  models.DeliveryType:
    properties:
      delivery_type_title:
        type: string
      id:
        type: string
    type: object
  models.Order:
    properties:
      closed_at:
        type: string
      created_at:
        type: string
      delivery_type_title:
        type: string
      id:
        type: string
      order_comment:
        type: string
      order_status:
        type: string
      order_sum_price:
        type: number
      payment_type_title:
        type: string
      user_email:
        type: string
      user_firstname:
        type: string
      user_lastname:
        type: string
      user_middle_name:
        type: string
      user_phone_number:
        type: string
    required:
    - delivery_type_title
    - order_sum_price
    - payment_type_title
    - user_email
    - user_firstname
    - user_lastname
    - user_middle_name
    - user_phone_number
    type: object
  models.OrderFullInfo:
    properties:
      delivery:
        items:
          $ref: '#/definitions/models.OrdersDelivery'
        type: array
      info:
        $ref: '#/definitions/models.Order'
      products:
        items:
          $ref: '#/definitions/models.OrderProducts'
        type: array
    type: object
  models.OrderInfo:
    properties:
      delivery:
        items:
          $ref: '#/definitions/models.OrdersDelivery'
        type: array
      info:
        $ref: '#/definitions/models.Order'
      products:
        items:
          $ref: '#/definitions/models.OrderProductFullInfo'
        type: array
    type: object
  models.OrderProductFullInfo:
    properties:
      amount_in_stock:
        type: number
      article:
        type: string
      created_at:
        type: string
      id:
        type: integer
      img_url:
        type: string
      order_id:
        type: string
      packages_in_box:
        type: integer
      price:
        type: number
      price_for_quantity:
        type: number
      product_title:
        type: string
      quantity:
        type: integer
      units_in_package:
        type: integer
    type: object
  models.OrderProducts:
    properties:
      price_for_quantity:
        type: number
      product_id:
        type: integer
      quantity:
        type: integer
    type: object
  models.OrdersDelivery:
    properties:
      delivery_description:
        type: string
      delivery_title:
        type: string
    type: object
  models.PaymentType:
    properties:
      id:
        type: string
      payment_type_title:
        type: string
    type: object
  models.Product:
    properties:
      amount_in_stock:
        example: 120
        type: number
      article:
        example: "000123"
        type: string
      category_title:
        example: Одноразові стакани
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        example: 5
        type: integer
      img_url:
        example: https://google-images.com/some-img123
        type: string
      packages_in_box:
        example: 50
        type: integer
      price:
        example: 3.75
        type: number
      product_title:
        example: Стакан одноразовий Крафт 110мл
        type: string
      type_title:
        example: Стакан
        type: string
      units_in_package:
        example: 30
        type: integer
    required:
    - article
    - category_title
    - packages_in_box
    - price
    - product_title
    - type_title
    - units_in_package
    type: object
  models.ProductInfo:
    properties:
      description:
        example: Білий
        type: string
      info_title:
        example: Колір
        type: string
      product_id:
        example: 1
        type: integer
    type: object
  models.ProductInfoDescription:
    properties:
      description:
        items:
          $ref: '#/definitions/models.ProductInfo'
        type: array
      info:
        $ref: '#/definitions/models.Product'
    type: object
  models.User:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role_id:
        type: integer
    required:
    - email
    - name
    - password
    - phone_number
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for AllianceCup Application
  title: AllianceCup API
  version: "1.0"
paths:
  /api/admin/add-category:
    post:
      consumes:
      - application/json
      description: Adds a new category
      operationId: adds category
      parameters:
      - description: category info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.ItemProcessedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: AddCategory
      tags:
      - api/admin
  /api/admin/add-product:
    post:
      consumes:
      - application/json
      description: Adds a new product
      operationId: adds product
      parameters:
      - description: product info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.ProductInfoDescription'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.ItemProcessedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: AddProduct
      tags:
      - api/admin
  /api/admin/all-orders:
    get:
      description: get orders by status
      operationId: get orders
      parameters:
      - description: Last item created at for pagination
        in: query
        name: created_at
        type: string
      - description: Sort by orders status
        in: query
        name: order_status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: Get Orders
      tags:
      - api/admin
  /api/admin/delete-category:
    delete:
      consumes:
      - application/json
      description: Deletes category
      operationId: deletes category
      parameters:
      - description: category id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ItemProcessedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: DeleteCategory
      tags:
      - api/admin
  /api/admin/delete-product:
    delete:
      consumes:
      - application/json
      description: Deletes product
      operationId: delete product
      parameters:
      - description: product id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ItemProcessedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: DeleteProduct
      tags:
      - api/admin
  /api/admin/filtration-item:
    post:
      consumes:
      - application/json
      description: Adds a filtration item to a category
      operationId: add filtration
      parameters:
      - description: filtration info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CategoryFiltration'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Add filtration for category
      tags:
      - api/admin
  /api/admin/new-moderator:
    post:
      consumes:
      - application/json
      description: registers a new moderator
      operationId: create account for moderator
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: CreateModerator
      tags:
      - api/admin
  /api/admin/update-category:
    put:
      consumes:
      - application/json
      description: Updates category
      operationId: updates category
      parameters:
      - description: category info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ItemProcessedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: UpdateCategory
      tags:
      - api/admin
  /api/admin/update-product:
    put:
      consumes:
      - application/json
      description: Updates product
      operationId: updates product
      parameters:
      - description: product info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.ProductInfoDescription'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ItemProcessedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: UpdateProduct
      tags:
      - api/admin
  /api/all-categories:
    get:
      consumes:
      - application/json
      description: get all categories
      operationId: get categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.allCategoriesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: GetCategories
      tags:
      - api
  /api/client/add-to-cart:
    post:
      consumes:
      - application/json
      description: adds a product to a cart
      operationId: adds a product to a cart
      parameters:
      - description: product info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CartProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: AddToCart
      tags:
      - api/client
  /api/client/add-to-favourites:
    post:
      consumes:
      - application/json
      description: adds a product to favourites
      operationId: adds to favourites
      parameters:
      - description: product id
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.ProductIdInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ItemProcessedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: AddToFavourites
      tags:
      - api/client
  /api/client/change-password:
    put:
      consumes:
      - application/json
      description: Changes user password
      operationId: change user password
      parameters:
      - description: Info to change password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Client change password
      tags:
      - api/client
  /api/client/delete-from-cart:
    delete:
      consumes:
      - application/json
      description: deletes a product from users cart
      operationId: deletes from cart
      parameters:
      - description: Product id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ItemProcessedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: DeleteFromCart
      tags:
      - api/client
  /api/client/delete-from-favourites:
    delete:
      description: deletes product from favourites
      operationId: deletes from favourites
      parameters:
      - description: Product id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.ItemProcessedResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: DeleteFromFavourites
      tags:
      - api/client
  /api/client/get-favourites:
    get:
      description: gets user favourite products
      operationId: get favourites
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: GetFavourites
      tags:
      - api/client
  /api/client/get-order:
    get:
      description: gets user order full info by its id
      operationId: gets order by id
      parameters:
      - description: order id
        in: query
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: GetOrderById
      tags:
      - api/client
  /api/client/logout:
    delete:
      description: ends session
      operationId: logout from account
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - api/client
  /api/client/user-cart:
    get:
      description: gets products from a cart
      operationId: gets products from a cart
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CartProductsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: GetProductsInCart
      tags:
      - api/client
  /api/client/user-orders:
    get:
      consumes:
      - application/json
      description: gets user orders
      operationId: gets orders
      parameters:
      - description: last order created_at for pagination
        in: query
        name: created_at
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: GetUserOrders
      tags:
      - api/client
  /api/get-products:
    post:
      description: get products from certain category with params
      operationId: gets products
      parameters:
      - description: Category
        in: query
        name: category
        required: true
        type: string
      - description: Size
        in: query
        name: size
        type: integer
      - description: Type
        in: query
        name: type
        type: string
      - description: Search
        in: query
        name: search
        type: string
      - description: Price
        in: query
        name: price
        type: string
      - description: characteristic
        in: query
        name: characteristic
        type: string
      - description: Created At
        in: query
        name: created_at
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: GetProducts
      tags:
      - api
  /api/new-order:
    post:
      consumes:
      - application/json
      description: creates a new order
      operationId: creates an order
      parameters:
      - description: order info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.OrderFullInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.OrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: NewOrder
      tags:
      - api
  /api/order-info-types:
    get:
      consumes:
      - application/json
      description: handler for admin/moderator to processed order by id
      operationId: processed order
      parameters:
      - description: order status
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.ProcessedOrderStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DeliveryPaymentTypes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Processed order by id
      tags:
      - api/admin
  /api/product:
    get:
      description: get product full info by its id
      operationId: gets full product info
      parameters:
      - description: Product id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductInfoDescription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: GetProductById
      tags:
      - api
  /auth/refresh:
    post:
      description: Gets a new access token using refreshToken
      operationId: refreshes token from account
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Refresh
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: signs in account
      operationId: sign-in account
      parameters:
      - description: sign in account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SignInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: registers a new user
      operationId: create account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
